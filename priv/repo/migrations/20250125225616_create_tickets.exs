defmodule Shire.Repo.Migrations.CreateTickets do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:tickets, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :subject, :text, null: false
      add :status, :text, null: false, default: "open"

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :organization_id,
          references(:organizations,
            column: :id,
            name: "tickets_organization_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    drop_if_exists unique_index(:organizations, [:id, :domain],
                     name: "organizations_unique_domain_index"
                   )

    create unique_index(:organizations, [:id, :domain], name: "organizations_unique_domain_index")
  end

  def down do
    drop_if_exists unique_index(:organizations, [:id, :domain],
                     name: "organizations_unique_domain_index"
                   )

    create unique_index(:organizations, [:id, :domain], name: "organizations_unique_domain_index")

    drop constraint(:tickets, "tickets_organization_id_fkey")

    drop table(:tickets)
  end
end
